{"ast":null,"code":"var _jsxFileName = \"/Users/matiasmolinabishop/Desktop/01-starting-project/src/components/Meals/MealItem/MealItemForm.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport \"./MealItemForm.css\";\nimport Input from \"../../UI/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MealItemForm = props => {\n  _s();\n  const [AmountIsValid, setAmountIsValid] = useState(true);\n  const amountInputRef = useRef();\n  const submitHandler = e => {\n    e.preventDefault();\n    const enteredAmount = amountInputRef.current.value;\n    //Every ref has access to a value. This value from input always returns a string even if the type is number\n    const enteredAmountNumber = +enteredAmount;\n    if (enteredAmount.trim().length < 1 || enteredAmountNumber < 1 || enteredAmountNumber > 5) {\n      setAmountIsValid(false);\n      console.log(`IS IT WORKING? ${AmountIsValid}`);\n      return; //We have this validation check. If any of this cases is true we return the fucntion without doing anything\n      //We also want to output a message to the user (err)\n    }\n    //We want forward the data passed by the user to a parent component that takes care of adding the new itmes to the users cart\n    //We do this beacuse the cart item needs more data than just the entered amount\n    props.onAddToCart(enteredAmountNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input\n      // This is a cutom component so refs does not work like this. For it to work we need to warp the custom component with React.forwardRef()\n      , {\n        ref: amountInputRef,\n        label: \"Amount\",\n        input: {\n          id: \"amount_\" + props.id,\n          type: \"number\",\n          min: \"1\",\n          max: \"5\",\n          step: \"1\",\n          defaultValue: \"1\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+ Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), !AmountIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter value amoutn 1-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(MealItemForm, \"TxhD2yTN+JJlGiQZReyIX0K36Mc=\");\n_c = MealItemForm;\nexport default MealItemForm;\nvar _c;\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"names":["useRef","useState","Input","jsxDEV","_jsxDEV","Fragment","_Fragment","MealItemForm","props","_s","AmountIsValid","setAmountIsValid","amountInputRef","submitHandler","e","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","length","console","log","onAddToCart","children","className","onSubmit","ref","label","input","id","type","min","max","step","defaultValue","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/matiasmolinabishop/Desktop/01-starting-project/src/components/Meals/MealItem/MealItemForm.js"],"sourcesContent":["import { useRef, useState } from \"react\";\n\nimport \"./MealItemForm.css\";\nimport Input from \"../../UI/Input\";\n\nconst MealItemForm = (props) => {\n  const [AmountIsValid, setAmountIsValid] = useState(true);\n  const amountInputRef = useRef();\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const enteredAmount = amountInputRef.current.value;\n    //Every ref has access to a value. This value from input always returns a string even if the type is number\n    const enteredAmountNumber = +enteredAmount;\n    if (\n      enteredAmount.trim().length < 1 ||\n      enteredAmountNumber < 1 ||\n      enteredAmountNumber > 5\n    ) {\n      setAmountIsValid(false);\n      console.log(`IS IT WORKING? ${AmountIsValid}`);\n      return; //We have this validation check. If any of this cases is true we return the fucntion without doing anything\n      //We also want to output a message to the user (err)\n    }\n    //We want forward the data passed by the user to a parent component that takes care of adding the new itmes to the users cart\n    //We do this beacuse the cart item needs more data than just the entered amount\n    props.onAddToCart(enteredAmountNumber);\n  };\n  return (\n    <>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <Input\n          // This is a cutom component so refs does not work like this. For it to work we need to warp the custom component with React.forwardRef()\n          ref={amountInputRef}\n          label=\"Amount\"\n          input={{\n            id: \"amount_\" + props.id,\n            type: \"number\",\n            min: \"1\",\n            max: \"5\",\n            step: \"1\",\n            defaultValue: \"1\",\n          }}\n        />\n        <button>+ Add</button>\n        {!AmountIsValid && <p>Please enter value amoutn 1-5</p>}\n      </form>\n    </>\n  );\n};\n\nexport default MealItemForm;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAExC,OAAO,oBAAoB;AAC3B,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAMW,cAAc,GAAGZ,MAAM,CAAC,CAAC;EAC/B,MAAMa,aAAa,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,aAAa,GAAGJ,cAAc,CAACK,OAAO,CAACC,KAAK;IAClD;IACA,MAAMC,mBAAmB,GAAG,CAACH,aAAa;IAC1C,IACEA,aAAa,CAACI,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,IAC/BF,mBAAmB,GAAG,CAAC,IACvBA,mBAAmB,GAAG,CAAC,EACvB;MACAR,gBAAgB,CAAC,KAAK,CAAC;MACvBW,OAAO,CAACC,GAAG,CAAE,kBAAiBb,aAAc,EAAC,CAAC;MAC9C,OAAO,CAAC;MACR;IACF;IACA;IACA;IACAF,KAAK,CAACgB,WAAW,CAACL,mBAAmB,CAAC;EACxC,CAAC;EACD,oBACEf,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACErB,OAAA;MAAMsB,SAAS,EAAC,MAAM;MAACC,QAAQ,EAAEd,aAAc;MAAAY,QAAA,gBAC7CrB,OAAA,CAACF;MACC;MAAA;QACA0B,GAAG,EAAEhB,cAAe;QACpBiB,KAAK,EAAC,QAAQ;QACdC,KAAK,EAAE;UACLC,EAAE,EAAE,SAAS,GAAGvB,KAAK,CAACuB,EAAE;UACxBC,IAAI,EAAE,QAAQ;UACdC,GAAG,EAAE,GAAG;UACRC,GAAG,EAAE,GAAG;UACRC,IAAI,EAAE,GAAG;UACTC,YAAY,EAAE;QAChB;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFpC,OAAA;QAAAqB,QAAA,EAAQ;MAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACrB,CAAC9B,aAAa,iBAAIN,OAAA;QAAAqB,QAAA,EAAG;MAA6B;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD;EAAC,gBACP,CAAC;AAEP,CAAC;AAAC/B,EAAA,CA5CIF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AA8ClB,eAAeA,YAAY;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}