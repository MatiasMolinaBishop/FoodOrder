{"ast":null,"code":"var _jsxFileName = \"/Users/matiasmolinabishop/Desktop/01-starting-project/src/store/CartProvider.js\";\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  item: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  const addItemToCartHandler = item => {};\n  const removeItemFromCartHandler = id => {};\n  const cartContext = {\n    items: [],\n    totalAmount: 0,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  //This allows us to wrap any compnent that should get access to this context with this cart provider component\n  //We also add all the logic for managing this data on this component\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["CartContext","useReducer","jsxDEV","_jsxDEV","defaultCartState","item","totalAmount","cartReducer","state","action","CartProvider","props","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","items","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/matiasmolinabishop/Desktop/01-starting-project/src/store/CartProvider.js"],"sourcesContent":["import CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nconst defaultCartState = {\n  item: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const addItemToCartHandler = (item) => {};\n  const removeItemFromCartHandler = (id) => {};\n\n  const cartContext = {\n    items: [],\n    totalAmount: 0,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n  //This allows us to wrap any compnent that should get access to this context with this cart provider component\n  //We also add all the logic for managing this data on this component\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":";AAAA,OAAOA,WAAW,MAAM,gBAAgB;AACxC,SAASC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnC,MAAMC,gBAAgB,GAAG;EACvBC,IAAI,EAAE,EAAE;EACRC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,OAAOL,gBAAgB;AACzB,CAAC;AAED,MAAMM,YAAY,GAAIC,KAAK,IAAK;EAC9B,MAAMC,oBAAoB,GAAIP,IAAI,IAAK,CAAC,CAAC;EACzC,MAAMQ,yBAAyB,GAAIC,EAAE,IAAK,CAAC,CAAC;EAE5C,MAAMC,WAAW,GAAG;IAClBC,KAAK,EAAE,EAAE;IACTV,WAAW,EAAE,CAAC;IACdW,OAAO,EAAEL,oBAAoB;IAC7BM,UAAU,EAAEL;EACd,CAAC;EACD;EACA;EACA,oBACEV,OAAA,CAACH,WAAW,CAACmB,QAAQ;IAACC,KAAK,EAAEL,WAAY;IAAAM,QAAA,EACtCV,KAAK,CAACU;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAACC,EAAA,GAjBIhB,YAAY;AAmBlB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}